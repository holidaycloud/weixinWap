// Generated by CoffeeScript 1.8.0
(function() {
  var Q, config, request, _getCoupons, _getCustomerInfo, _getOpenid;

  request = require("request");

  config = require("./../config/config.json");

  Q = require("q");

  _getOpenid = function(code) {
    var deferred, url;
    deferred = Q.defer();
    url = "" + config.weixin.host + ":" + config.weixin.port + "/weixin/codeAccesstoken/" + global.ent + "?code=" + code;
    request({
      url: url,
      timeout: 3000,
      method: "GET"
    }, function(err, response, body) {
      var error, res;
      if (err) {
        return deferred.reject(err);
      } else {
        try {
          res = JSON.parse(body);
          if (res.error === 1) {
            return deferred.reject(new Error(res.errMsg));
          } else {
            return deferred.resolve(res.data);
          }
        } catch (_error) {
          error = _error;
          return deferred.reject(new Error("Parse Error"));
        }
      }
    });
    return deferred.promise;
  };

  _getCustomerInfo = function(openid) {
    var deferred, url;
    deferred = Q.defer();
    url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/weixinLogin?ent=" + global.ent + "&openId=" + openid;
    request({
      url: url,
      timeout: 3000,
      method: "GET"
    }, function(err, response, body) {
      var error, res;
      if (err) {
        return deferred.reject(err);
      } else {
        try {
          res = JSON.parse(body);
          if (res.error === 1) {
            return deferred.reject(new Error(res.errMsg));
          } else {
            return deferred.resolve(res.data);
          }
        } catch (_error) {
          error = _error;
          return deferred.reject(new Error("Parse Error"));
        }
      }
    });
    return deferred.promise;
  };

  _getCoupons = function(customer) {
    var deferred, url;
    deferred = Q.defer();
    url = "" + config.inf.host + ":" + config.inf.port + "/api/coupon/customerCoupons?ent=" + global.ent + "&customer=" + customer + "&status=0";
    request({
      url: url,
      timeout: 3000,
      method: "GET"
    }, function(err, response, body) {
      var error, res;
      if (err) {
        return deferred.reject(err);
      } else {
        try {
          res = JSON.parse(body);
          if (res.error === 1) {
            return deferred.reject(new Error(res.errMsg));
          } else {
            return deferred.resolve(res.data);
          }
        } catch (_error) {
          error = _error;
          return deferred.reject(new Error("Parse Error"));
        }
      }
    });
    return deferred.promise;
  };

  exports.coupons = function(req, res) {
    var code, state;
    code = req.query.code;
    state = req.query.state;
    return _getOpenid(code).then(function(openid) {
      return _getCustomerInfo(openid.openid);
    }, function(err) {
      console.log(err);
      return res.status(500).end();
    }).then(function(customer) {
      return _getCoupons(customer._id);
    }, function(err) {
      console.log(err);
      return res.status(500).end();
    }).then(function(coupons) {
      console.log(coupons);
      return res.render("coupons", {
        coupons: coupons
      });
    }, function(err) {
      console.log(err);
      return res.status(500).end();
    })["catch"](function(err) {
      console.log(err);
      return res.status(500).end();
    });
  };

}).call(this);
